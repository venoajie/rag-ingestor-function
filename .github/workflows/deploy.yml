
name: Build and Deploy to OCI Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 1. Check out repository
      uses: actions/checkout@v4

    - name: 2. Set up OCI CLI Config
      run: |
        mkdir -p ~/.oci
        echo -n "${{ secrets.OCI_PRIVATE_KEY }}" | base64 --decode > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
        
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config

    - name: 3. Set up Go and Build Fn CLI
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    - run: |
        git clone https://github.com/fnproject/cli.git
        cd cli
        make build
        sudo mv fn /usr/local/bin/

    - name: 4. Configure and Test Fn CLI
      run: |
        fn create context oci-prod --provider oracle
        fn use context oci-prod
        fn update context oracle.compartment-id "${{ secrets.OCI_COMPARTMENT_ID }}"
        fn update context api-url "https://functions.${{ secrets.OCI_REGION }}.oci.oraclecloud.com"
        
        # This is the command that will fail if secrets are wrong
        fn list apps

    # --- The rest of the workflow will only run if 'fn list apps' succeeds ---

    - name: 5. Log in to OCIR
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.OCI_REGION_KEY }}.ocir.io
        username: ${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCI_USERNAME }}
        password: ${{ secrets.OCIR_AUTH_TOKEN }}

    - name: 6. Build and push Docker image
      id: build_and_push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.OCI_REGION_KEY }}.ocir.io/${{ secrets.OCI_TENANCY_NAMESPACE }}/rag-app/rag-ingestor:latest

    - name: 7. Update OCI Function
      run: |
        fn update function rag-app rag-ingestor --image ${{ steps.build_and_push.outputs.digest }}