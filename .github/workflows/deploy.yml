
name: Build and Deploy to OCI Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 1. Check out repository
      uses: actions/checkout@v4

    - name: 2. Install OCI CLI
      uses: oracle-actions/oci-cli-action@v1

    - name: 3. Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        echo -n "${{ secrets.OCI_PRIVATE_KEY }}" | base64 --decode > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/giconfig
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ vars.OCI_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config

    - name: 4. Log in to OCI Container Registry (OCIR)
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.OCI_REGION_KEY }}.ocir.io
        username: ${{ secrets.OCI_TENANCY_NAMESPACE }}/${{ secrets.OCI_USERNAME }}
        password: ${{ secrets.OCIR_AUTH_TOKEN }}

    - name: 5. Build and Push Image with Raw Docker Commands
      run: |
        IMAGE_TAG="${{ vars.OCI_REGION_KEY }}.ocir.io/${{ secrets.OCI_TENANCY_NAMESPACE }}/rag-app/rag-ingestor:${{ github.sha }}"
        echo "Building image with tag: $IMAGE_TAG"
        docker build -t "$IMAGE_TAG" .
        echo "Pushing image to OCIR..."
        docker push "$IMAGE_TAG"
        echo "âœ… Image push successful!"
        echo "FULL_IMAGE_NAME=$IMAGE_TAG" >> $GITHUB_ENV

    - name: 6. Create or Update OCI Function
      run: |
        # This requires the OCI_FN_APP_OCID secret to be set in your GitHub repository.
        FUNCTION_OCID=$(oci fn function list --app-id ${{ secrets.OCI_FN_APP_OCID }} --display-name rag-ingestor --query "data[0].id" --raw-output || true)
        
        if [ -z "$FUNCTION_OCID" ]; then
          echo "Function 'rag-ingestor' not found. Creating it..."
          oci fn function create \
            --application-id ${{ secrets.OCI_FN_APP_OCID }} \
            --display-name rag-ingestor \
            --image "${{ env.FULL_IMAGE_NAME }}" \
            --memory-in-mbs 1024 \
            --timeout-in-seconds 120
        else
          echo "Function 'rag-ingestor' found. Updating it..."
          oci fn function update \
            --function-id "$FUNCTION_OCID" \
            --image "${{ env.FULL_IMAGE_NAME }}"
        fi